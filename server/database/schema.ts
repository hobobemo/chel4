import { sqliteTable, text, integer, blob, real } from 'drizzle-orm/sqlite-core'

export const awardees = sqliteTable('awardees', {
  id: integer('id').primaryKey({ autoIncrement: true }),
  trophy: integer('trophy'),
  leagueId: integer('leagueId'),
  seasonId: integer('seasonId'),
  winnerId: integer('winnerId'),
  desc: integer('desc'),
  userId: text('userId'),
});

export const divisions = sqliteTable('divisions', {
  id: integer('id').primaryKey({ autoIncrement: true }),
  leagueId: integer('leagueId'),
  name: text('name').notNull(),
  userId: text('userId'),
  logo: text('logo').notNull(),
  isActive: integer('isActive'),
  discordId: text('discordId')
});

export const eaClubs = sqliteTable('eaClubs', {
  id: integer('id').primaryKey(),
  matchId: text('matchId'),
  clubId: integer('clubId'),
  timestamp: integer('timestamp'), // ðŸ•’ match timestamp
  score: integer('score'),
  scoreString: text('scoreString'),
  goals: integer('goals'),
  goalsAgainst: integer('goalsAgainst'),
  result: text('result'),
  shots: integer('shots'),
  passa: integer('passa'), // pass attempts
  passc: integer('passc'), // pass completions
  ppg: integer('ppg'),     // powerplay goals
  ppo: integer('ppo'),     // powerplay opportunities
  toa: integer('toa'),     // time on attack (seconds)
  garaw: integer('garaw'),
  gfraw: integer('gfraw'),
  winnerByDnf: integer('winnerByDnf'),
  winnerByGoalieDnf: integer('winnerByGoalieDnf'),
  clubDivision: integer('clubDivision'),
  cNhlOnlineGameType: text('cNhlOnlineGameType'),
  teamSide: integer('teamSide'),
  memberString: text('memberString'),
  opponentClubId: integer('opponentClubId'),
  opponentScore: integer('opponentScore'),
  opponentTeamArtAbbr: text('opponentTeamArtAbbr'),
  teamArtAbbr: text('teamArtAbbr'),
  regionId: integer('regionId'),
  teamId: integer('teamId'),
  detailsName: text('detailsName'), // e.g., Halifax Voyagers
  customKitIsCustomTeam: integer('customKitIsCustomTeam'), // "1"
  customKitCrestAssetId: integer('customKitCrestAssetId'), // "84"
  customKitUseBaseAsset: integer('customKitUseBaseAsset')  // "1"
});

export const eaPlayers = sqliteTable('eaPlayers', {
  id: integer('id').primaryKey(),
  matchId: text('matchId'),
  clubId: integer('clubId'),
  opponentClubId: integer('opponentClubId'),
  teamId: integer('teamId'),
  opponentTeamId: integer('opponentTeamId'),
  teamArtAbbr: text('teamArtAbbr'),
  opponentTeamArtAbbr: text('opponentTeamArtAbbr'),
  teamSide: integer('teamSide'),
  playerId: text('playerId'),
  playername: text('playername'),
  position: text('position'),
  posSorted: integer('posSorted'),
  isGuest: integer('isGuest'),
  player_dnf: integer('player_dnf'),
  removedReason: text('removedReason'),
  clientPlatform: text('clientPlatform'),
  class: text('class'),
  playerLevel: integer('playerLevel'),
  rankpoints: integer('rankpoints'),
  ranktierassetid: text('ranktierassetid'),
  pNhlOnlineGameType: text('pNhlOnlineGameType'),
  score: integer('score'),
  scoreRaw: integer('scoreRaw'),
  scoreString: text('scoreString'),
  result: text('result'),
  opponentScore: integer('opponentScore'),
  ratingDefense: text('ratingDefense'),
  ratingOffense: text('ratingOffense'),
  ratingTeamplay: text('ratingTeamplay'),
  skgoals: integer('skgoals'),
  skassists: integer('skassists'),
  skshots: integer('skshots'),
  skshotattempts: integer('skshotattempts'),
  skshotonnetpct: text('skshotonnetpct'),
  skshotpct: text('skshotpct'),
  skgiveaways: integer('skgiveaways'),
  sktakeaways: integer('sktakeaways'),
  skinterceptions: integer('skinterceptions'),
  skhits: integer('skhits'),
  skbs: integer('skbs'),
  skdeflections: integer('skdeflections'),
  skpassattempts: integer('skpassattempts'),
  skpasses: integer('skpasses'),
  skpasspct: text('skpasspct'),
  skfol: integer('skfol'),
  skfow: integer('skfow'),
  skfopct: text('skfopct'),
  skpkclearzone: integer('skpkclearzone'),
  skplusmin: integer('skplusmin'),
  skpim: integer('skpim'),
  skpenaltiesdrawn: integer('skpenaltiesdrawn'),
  skpossession: integer('skpossession'),
  skppg: integer('skppg'),
  skshg: integer('skshg'),
  sksaucerpasses: integer('sksaucerpasses'),
  skgwg: integer('skgwg'),
  glshots: integer('glshots'),
  glsaves: integer('glsaves'),
  glsavepct: text('glsavepct'),
  glga: integer('glga'),
  glgaa: text('glgaa'),
  gldsaves: integer('gldsaves'),
  glpokechecks: integer('glpokechecks'),
  glpkclearzone: integer('glpkclearzone'),
  glbrkshots: integer('glbrkshots'),
  glbrksaves: integer('glbrksaves'),
  glbrksavepct: text('glbrksavepct'),
  glpensaves: integer('glpensaves'),
  glpenshots: integer('glpenshots'),
  glpensavepct: text('glpensavepct'),
  glsoperiods: integer('glsoperiods'),
  toi: text('toi'),
  toiseconds: integer('toiseconds'),
  memberString: text('memberString')
});

export const leagues = sqliteTable('leagues', {
  id: integer('id').primaryKey({ autoIncrement: true }),
  licenseId: integer('licenseId'),
  name: text('name').notNull(),
  seasons: integer('seasons'),
  divisions: integer('divisions'),
  guildId: text('guildId'),
  primaryColor: text('primaryColor'),
  secondaryColor: text('secondaryColor'),
  isActive: integer('isActive'),
  userId: text('userId')
});

export const licenses = sqliteTable('licenses', {
  id: integer('id').primaryKey({ autoIncrement: true }),
  isActive: integer('isActive'),
  userId: text('userId'),
  publicKey: text('publicKey')
});

export const matchResults = sqliteTable('matchResults', {
  id: integer('id').primaryKey(),
  matchId: text('matchId'),
  leagueId: integer('leagueId'),
  seasonId: integer('seasonId'),
  isCustom: integer('isCustom'),
  timestamp: text('timestamp'),
  clubId: integer('clubId'),
  opponentClubId: integer('opponentClubId'),
  garaw: integer('garaw'),
  gfraw: integer('gfraw'),
  memberString: text('memberString'),
  score: integer('score'),
  opponentScore: integer('opponentScore'),
  teamSide: integer('teamSide'),
  toa: integer('toa'),
  winnerByDnf: integer('winnerByDnf'),
  winnerByGoalieDnf: integer('winnerByGoalieDnf'),
  goals: integer('goals'),
  goalsAgainst: integer('goalsAgainst'),
  gameId: integer('gameId'),
  ogMatchId: text('ogMatchId'),
  userId: text('userId'),
  ot: integer('ot'),
});

export const playerResults = sqliteTable('playerResults', {
  id: text('id').primaryKey(),
  leagueId: integer('leagueId'),
  seasonId: integer('seasonId'),
  gameId: integer('gameId'),
  matchId: text('matchId'),
  clubId: integer('clubId'),
  opponentClubId: integer('opponentClubId'),
  teamId: integer('teamId'),
  opponentTeamId: integer('opponentTeamId'),
  teamArtAbbr: text('teamArtAbbr'),
  opponentTeamArtAbbr: text('opponentTeamArtAbbr'),
  teamSide: integer('teamSide'),
  playerId: text('playerId'),
  playername: text('playername'),
  position: text('position'),
  posSorted: integer('posSorted'),
  isGuest: integer('isGuest'),
  player_dnf: integer('player_dnf'),
  removedReason: text('removedReason'),
  clientPlatform: text('clientPlatform'),
  class: text('class'),
  playerLevel: integer('playerLevel'),
  rankpoints: integer('rankpoints'),
  ranktierassetid: text('ranktierassetid'),
  pNhlOnlineGameType: text('pNhlOnlineGameType'),
  score: integer('score'),
  scoreRaw: integer('scoreRaw'),
  scoreString: text('scoreString'),
  result: text('result'),
  opponentScore: integer('opponentScore'),
  ratingDefense: text('ratingDefense'),
  ratingOffense: text('ratingOffense'),
  ratingTeamplay: text('ratingTeamplay'),
  skgoals: integer('skgoals'),
  skassists: integer('skassists'),
  skshots: integer('skshots'),
  skshotattempts: integer('skshotattempts'),
  skshotonnetpct: text('skshotonnetpct'),
  skshotpct: text('skshotpct'),
  skgiveaways: integer('skgiveaways'),
  sktakeaways: integer('sktakeaways'),
  skinterceptions: integer('skinterceptions'),
  skhits: integer('skhits'),
  skbs: integer('skbs'),
  skdeflections: integer('skdeflections'),
  skpassattempts: integer('skpassattempts'),
  skpasses: integer('skpasses'),
  skpasspct: text('skpasspct'),
  skfol: integer('skfol'),
  skfow: integer('skfow'),
  skfopct: text('skfopct'),
  skpkclearzone: integer('skpkclearzone'),
  skplusmin: integer('skplusmin'),
  skpim: integer('skpim'),
  skpenaltiesdrawn: integer('skpenaltiesdrawn'),
  skpossession: integer('skpossession'),
  skppg: integer('skppg'),
  skshg: integer('skshg'),
  sksaucerpasses: integer('sksaucerpasses'),
  skgwg: integer('skgwg'),
  glshots: integer('glshots'),
  glsaves: integer('glsaves'),
  glsavepct: text('glsavepct'),
  glga: integer('glga'),
  glgaa: text('glgaa'),
  gldsaves: integer('gldsaves'),
  glpokechecks: integer('glpokechecks'),
  glpkclearzone: integer('glpkclearzone'),
  glbrkshots: integer('glbrkshots'),
  glbrksaves: integer('glbrksaves'),
  glbrksavepct: text('glbrksavepct'),
  glpensaves: integer('glpensaves'),
  glpenshots: integer('glpenshots'),
  glpensavepct: text('glpensavepct'),
  glsoperiods: integer('glsoperiods'),
  toi: text('toi'),
  toiseconds: integer('toiseconds'),
  memberString: text('memberString')
});

export const schedules = sqliteTable("schedules", {
  id: integer("id").primaryKey({ autoIncrement: true }),
  leagueId: integer("leagueId").notNull(),
  seasonId: integer("seasonId").notNull(),
  homeId: integer("homeId").notNull(),
  awayId: integer("awayId").notNull(),
  gameTime: integer("gameTime").notNull(),
  gameType: integer("gameType").notNull(),
  userId: text("userId").notNull(),
});

export const seasons = sqliteTable('seasons', {
  id: integer('id').primaryKey({ autoIncrement: true }),
  leagueId: integer('leagueId'),
  userId: text('userId'),
  isActive: integer('isActive'),
  name: text('name'),
  startDate: text('startDate'),
  endDate: text('endDate'),
  registrationStart: text('registrationStart'),
  registrationEnd: text('registrationEnd'),
  draftDate: text('draftDate'),
  discordRole: text('discordRole'),
  discordId: text('discordId'),
});

export const teams = sqliteTable('teams', {
  id: text('id').primaryKey(),
  leagueId: integer('leagueId'),
  clubId: integer('clubId'),
  name: text('name').notNull(),
  eaName: text('eaName').notNull(),
  abbr: text('abbr').notNull(),
  logo: text('logo').notNull(),
  crestAssetId: text('crestAssetId'),
  isCustomTeam: text('isCustomTeam'),
  isActive: integer('isActive'),
  userId: text('userId'),
  divisionId: integer('divisionId'),
  logoType: integer('logoType'),
  useBaseAsset: text('useBaseAsset').notNull(),
  playerRole: text('playerRole'),
  gmRole: text('gmRole'),
  agmRole: text('agmRole')
});

export const trophies = sqliteTable('trophies', {
  id: integer('id').primaryKey({ autoIncrement: true }),
  leagueId: integer('leagueId'),
  name: text('name').notNull(),
  desc: real('desc'),
  type: integer('type'),
  userId: text('userId'),
  image: text('name')
});

export const users = sqliteTable('users', {
  id: text('id').primaryKey(), // Discord ID
  username: text('username'),
  global_name: text('global_name'),
  avatar: text('avatar'),
  discriminator: text('discriminator'),
  email: text('email'),
  verified: integer('verified'),
  locale: text('locale'),
  mfa_enabled: integer('mfa_enabled'),
  premium_type: integer('premium_type'),
  connections: blob('connections'), // stored as JSON blob
  guilds: blob('guilds'),           // stored as JSON blob
  customerId: text('customerId'),
});